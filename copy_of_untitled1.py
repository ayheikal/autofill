# -*- coding: utf-8 -*-
"""Copy of Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j4RczI5bJJtROm_gsZNIG6d6Wg_7rZOp
"""

import numpy as np

model_dict = {}

# reading the file
with open('/content/economy3.txt', 'r') as file:
    data_set = file.read().replace('\n', '')

data_list_repeated = data_set.split()

# remove repeated data
data_list = []
for d in data_list_repeated:
    if d in data_list or len(d) < 1:
        continue
    else:
        data_list.append(d)

def _count(data):
    items = data.split()
    key = items[0] + ' ' + items[1]
    for i in range(2, len(items)):
        key += ' ' +items[i]
        if key in model_dict:
            model_dict[key] += 1 
        else:
            model_dict[key] = 1
        key = items[i-1] + ' ' + items[i]


# d = 'mohamed mohamed mohamed mohamed mohamed mohamed'
_count(data_set)
# print(model_dict['mohamed mohamed mohamed'])
# for e in model_dict:
#   print(e)

# print('=============')
def prdict_the_third_word(w1 , w2):
  prediction = {}
  # max = 0
  # trigram = ''
  for word in data_list:
      phrase = w1 + ' ' + w2 + ' '+ word
      if phrase in model_dict:
        counter = model_dict[phrase]
        prediction[phrase] = counter
        # if(counter > max):
          # max = counter
          # trigram = word
  return prediction

def main():

  print("Enter two words to predict the third")
  sentence = input()
  sentence = sentence.split()
  words = []
  for s in sentence:
    s = s.strip()
    if(len(s) > 0):
      words.append(s)
  
  if len(words) == 2:
    predection = prdict_the_third_word(words[0], words[1])
    if(len(predection) > 0):
      tmp = sorted(predection.items(), key = 
             lambda kv:(kv[1], kv[0]))
      temp=(tmp[len(tmp)-1][0]).split()
      print(temp[2])
    else:
      print("there is no predection")


main()

